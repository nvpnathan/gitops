apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: clair-scans

spec:
  entrypoint: clair-scans
  volumes:
  - name: harbor-secret-vol
    secret:
      secretName: harbor-creds
  - name: harbor-cert-vol
    secret:
      secretName: harbor-cert
  arguments:
    parameters:
    - name: harbor-server
      value: "harbor.tpmlab.vmware.com"
      ## This is a workflow Global Parameter access it with
      ## {{workflow.parameters.harbor-server}}
    - name: image-repo
      value: "library/tomcat"
    - name: image-tag
      value: "latest"
    - name: severity-threshold
      value: "3"

  templates:
  - name: clair-scans
    steps:
    # Build a new container with Golang Binary and upload to Registry
    - - name: clair-scan-api
        template: clair-scan-api
     
    - - name: print-message
        template: print-message
        arguments:
          parameters:
          # Pass the hello-param output from the generate-parameter step as the message input to print-message
          - name: scan-results
            value: "{{steps.clair-scan-api.outputs.parameters.vulnerability-count}}"


  - name: clair-scan-api
    container:
      image: mytkrausjr/alpine-tools:latest
      securityContext:
        privileged: true
      command: [sh, -c]
      args: ['
            echo {{workflow.parameters.harbor-server}} &&
            curl -k --silent -X GET "https://{{workflow.parameters.harbor-server}}/api/repositories/{{workflow.parameters.image-repo}}/tags/{{workflow.parameters.image-tag}}/vulnerability/details" | jq ".[] | select( .severity >= {{workflow.parameters.severity-threshold}} ) | .severity" | wc -l > /tmp/vulnerability-count.txt
            ']  
      # To access secrets as environment variables, use the k8s valueFrom and
      # secretKeyRef constructs.
      env:
      - name: DOCKER_HOST               # the docker daemon can be access on the standard port on localhost
        value: 127.0.0.1
      - name: HARBORPASSWORD  # name of env var
        valueFrom:
          secretKeyRef:
            name: harbor-creds    # name of an existing k8s secret
            key: password     # 'key' subcomponent of the secret
      - name: HARBORCERT  # name of env var
        valueFrom:
          secretKeyRef:
            name: harbor-cert    # name of an existing k8s secret
            key: ca.crt     # 'key' subcomponent of the secret
      volumeMounts:
      - name: harbor-secret-vol     # mount file containing secret at /secret/mountpath
        mountPath: "/secret/mountpath"
      - name: harbor-cert-vol     # mount file containing secret at /secret/mountpath
        mountPath: "/etc/docker/certs.d/harbor.tpmlab.vmware.com"
    outputs:
      parameters:
      - name: vulnerability-count		# name of output parameter
        valueFrom:
          path: /tmp/vulnerability-count.txt	# set the value of hvulnerability-count to the contents of this vulnerability-count.txt


  - name: print-message
    inputs:
      parameters:
      - name: scan-results
    container:
      image: mytkrausjr/alpine-tools:latest
      command: [sh, -c]
      args: ["
      echo The results of the Clair Scan for the image {{workflow.parameters.image-repo}} on server {{workflow.parameters.harbor-server}} are &&
      echo {{inputs.parameters.scan-results}} vulnerabilites are higher than or equal to severity level {{workflow.parameters.severity-threshold}}
      "]